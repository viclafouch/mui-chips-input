"use strict";(self.webpackChunkmui_chips_input=self.webpackChunkmui_chips_input||[]).push([[443],{4053:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>r,default:()=>o,frontMatter:()=>c,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"api-reference","title":"API Reference","description":"This article discusses the API and props of MuiChipsInput. Props are defined within MuiChipsInputProps.","source":"@site/docs/api-reference.md","sourceDirName":".","slug":"/api-reference","permalink":"/mui-chips-input/docs/api-reference","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/mui-chips-input/docs/getting-started"},"next":{"title":"TextField inheritance","permalink":"/mui-chips-input/docs/inheritance"}}');var d=i(4848),s=i(8453);const c={sidebar_position:3},r="API Reference",h={},a=[{value:"<code>value</code>",id:"value",level:2},{value:"<code>onChange</code>",id:"onchange",level:2},{value:"<code>onAddChip</code>",id:"onaddchip",level:2},{value:"<code>onDeleteChip</code>",id:"ondeletechip",level:2},{value:"<code>onEditChip</code>",id:"oneditchip",level:2},{value:"<code>onInputChange</code>",id:"oninputchange",level:2},{value:"<code>clearInputOnBlur</code>",id:"clearinputonblur",level:2},{value:"<code>hideClearAll</code>",id:"hideclearall",level:2},{value:"<code>disableEdition</code>",id:"disableedition",level:2},{value:"<code>disableDeleteOnBackspace</code>",id:"disabledeleteonbackspace",level:2},{value:"<code>renderChip</code>",id:"renderchip",level:2},{value:"<code>addOnBlur</code>",id:"addonblur",level:2},{value:"<code>validate</code>",id:"validate",level:2}];function t(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,d.jsxs)(n.p,{children:["This article discusses the API and props of ",(0,d.jsx)(n.strong,{children:"MuiChipsInput"}),". Props are defined within ",(0,d.jsx)(n.code,{children:"MuiChipsInputProps"}),"."]}),"\n",(0,d.jsx)(n.h2,{id:"value",children:(0,d.jsx)(n.code,{children:"value"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"string[]"})," | ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"[]"})]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput value={['foo', 'bar']} />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"onchange",children:(0,d.jsx)(n.code,{children:"onChange"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"(value: string[]) => void"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets called once the user adds or removes a chip."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"const handleChange = (value) => {\n  /**\n  value: ['foo']\n  **/\n}\n\n<MuiChipsInput onChange={handleChange} />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"onaddchip",children:(0,d.jsx)(n.code,{children:"onAddChip"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"(chipValue: string, chipIndex: number) => void"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets called once the user adds a chip."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"const handleAddChip = (chipValue, chipIndex) => {\n  /**\n  chipValue: 'bar'\n  chipIndex: 1\n  **/\n}\n\n<MuiChipsInput value={['foo']} onAddChip={handleAddChip} />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"ondeletechip",children:(0,d.jsx)(n.code,{children:"onDeleteChip"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"(chipValue: string, chipIndex: number) => void"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets called once the user removes a chip."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"const handleDeleteChip = (chipValue, chipIndex) => {\n  /**\n  chipValue: 'foo'\n  chipIndex: 0\n  **/\n}\n\n<MuiChipsInput value={['foo']} onDeleteChip={handleDeleteChip} />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"oneditchip",children:(0,d.jsx)(n.code,{children:"onEditChip"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"(chipValue: string, chipIndex: number) => void"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets called once the user has edited a chip. User can edit a chip by double clicking on it."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"const handleEditChip = (chipValue, chipIndex) => {\n  /**\n  chipValue: 'bar'\n  chipIndex: 0\n  **/\n}\n\n<MuiChipsInput value={['foo']} onEditChip={handleEditChip} />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"oninputchange",children:(0,d.jsx)(n.code,{children:"onInputChange"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"(inputValue) => void"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Gets called once the user updates the input value."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"const handleInputChange = (inputValue) => {\n  /**\n  inputValue: 'hello world'\n  **/\n}\n\n<MuiChipsInput onInputChange={handleInputChange} />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"clearinputonblur",children:(0,d.jsx)(n.code,{children:"clearInputOnBlur"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Clear the input value when the user clicks outside the input."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput clearInputOnBlur />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"hideclearall",children:(0,d.jsx)(n.code,{children:"hideClearAll"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:'Hide the "x" icon button to prevent the user from deleting all the chips.'}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput hideClearAll />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"disableedition",children:(0,d.jsx)(n.code,{children:"disableEdition"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Prevent the user from editing a chip when double click on it."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput disableEdition />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"disabledeleteonbackspace",children:(0,d.jsx)(n.code,{children:"disableDeleteOnBackspace"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"By default, if the input field is empty and the user presses the delete key, the last chip will be deleted. You can disable this logic."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput disableDeleteOnBackspace />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"renderchip",children:(0,d.jsx)(n.code,{children:"renderChip"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"(ChipComponent: MuiChipsInputChipComponent, key: React.Key, ChipProps: MuiChipsInputChipProps) => JSX.Element"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["Custom how to render a Chip element in case if you want to add / edit the ",(0,d.jsx)(n.a,{href:"https://mui.com/material-ui/api/chip/",children:"Chip props"}),"."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput renderChip={(Component, key, props) => {\n  return <Component {...props} key={key} deleteIcon={<FaceIcon />} />\n}} />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"addonblur",children:(0,d.jsx)(n.code,{children:"addOnBlur"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"boolean"})," | ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Enable this option to add a chip when the input element loses focus."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput addOnBlur />\n"})}),"\n",(0,d.jsx)(n.h2,{id:"validate",children:(0,d.jsx)(n.code,{children:"validate"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Type: ",(0,d.jsx)(n.code,{children:"(chipValue: string) => boolean | { isError: boolean; textError: string }"})]}),"\n",(0,d.jsxs)(n.li,{children:["Default: ",(0,d.jsx)(n.code,{children:"() => true"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"Set a validation to your new chips, or when user is editing a chip."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput validate={(chipValue) => chipValue.length >= 3} />\n"})}),"\n",(0,d.jsx)(n.p,{children:"You can also display a text error if you need."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:"<MuiChipsInput validate={(chipValue) => {\n    return {\n      isError: chipValue.length >= 3,\n      textError: 'the value must be at least 3 characters long'\n    }\n  }}\n/>\n"})})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(t,{...e})}):t(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var l=i(6540);const d={},s=l.createContext(d);function c(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);